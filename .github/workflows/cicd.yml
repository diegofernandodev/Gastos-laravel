name: Deploy Laravel Application

on:
  push: 
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "APP_NAME=Laravel" >> laravel.env
          echo "APP_ENV=local" >> laravel.env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> laravel.env
          echo "APP_DEBUG=true" >> laravel.env
          echo "APP_URL=http://localhost" >> laravel.env
          echo "LOG_CHANNEL=stack" >> laravel.env
          echo "DB_CONNECTION=mysql" >> laravel.env
          echo "DB_HOST=mysql-container" >> laravel.env
          echo "DB_PORT=3306" >> laravel.env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> laravel.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> laravel.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> laravel.env

              
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Verify .env file
        run: cat .env

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Generate application key
        run: php artisan key:generate

      - name: Run tests
        run: php artisan test

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t diockerhub/laravel-app .

      - name: Push Docker image to Docker Hub
        run: docker push diockerhub/laravel-app:latest

      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: laravel.env
        
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env-file
          path: .env

      - name: Pull image from Docker Hub
        run: sudo docker pull diockerhub/laravel-app:latest

      - name: Create network if not exists
        run: |
          if ! sudo docker network inspect backend-network >/dev/null 2>&1; then
            sudo docker network create backend-network
          fi

      - name: Verify .env file
        run: cat laravel.env

      - name: Delete old container
        run: sudo docker rm -f laravel-app-container || true

      - name: Run Docker container
        run: sudo docker run -d --network backend-network -p 9000:9000 --name laravel-app-container --env-file .env diockerhub/laravel-app:latest
 
      - name: Run Sequelize migrations
        run: sudo docker exec node-app-container npx sequelize-cli db:migrate